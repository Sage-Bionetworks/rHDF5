## Use the R_HOME indirection to support installations of multiple R version
PKG_CXXFLAGS = -I./hdf5/hdf5/include -I./szip/szip/include -I../inst/include -O3 -w -c -fmessage-length=0 -fPIC 
PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` ./hdf5/hdf5/lib/libhdf5_cpp.a ./hdf5/hdf5/lib/libhdf5_hl_cpp.a ./hdf5/hdf5/lib/libhdf5.a ./hdf5/hdf5/lib/libhdf5_hl.a ./szip/szip/lib/libsz.a -lz -lstdc++

## As an alternative, one can also add this code in a file 'configure'
##
##    PKG_LIBS=`${R_HOME}/bin/Rscript -e "Rcpp:::LdFlags()"`
## 
##    sed -e "s|@PKG_LIBS@|${PKG_LIBS}|" \
##        src/Makevars.in > src/Makevars
## 
## which together with the following file 'src/Makevars.in'
##
##    PKG_LIBS = @PKG_LIBS@
##
## can be used to create src/Makevars dynamically. This scheme is more
## powerful and can be expanded to also check for and link with other
## libraries.  It should be complemented by a file 'cleanup'
##
##    rm src/Makevars
##
## which removes the autogenerated file src/Makevars. 
##
## Of course, autoconf can also be used to write configure files. This is
## done by a number of packages, but recommended only for more advanced users
## comfortable with autoconf and its related tools.

all: mylibs  $(SHLIB)

## NOTE:  "make clean" has to be added before ./configure for final production
mylibs:
	cd szip; ./configure --disable-shared ; make install
	cd hdf5; ./configure --disable-shared --with-pic --enable-cxx; make install
